function SwapBookConditions takes hashtable table returns boolean
    local integer abilityId = GetSpellAbilityId()
    local integer counter = 0
    local integer numItems = LoadInteger(table, StringHash("NumItems"), 0)

    loop
        exitwhen counter >= numItems

        if (LoadInteger(table, StringHash("Parent"), counter) == abilityId) then
            return true
        endif
        set counter = counter + 1
    endloop

    return false
endfunction

function SwapBookApplyLevel takes unit hero, hashtable table, integer selector returns nothing
    local integer heroHandle = GetHandleId(hero)
    local integer selectorBookHash = StringHash("SelectorBook")
    local integer addedHash = StringHash("AddedAbility")
    local integer effectHash = StringHash("EffectAbility")
    local integer level = LoadInteger(table, heroHandle, selector)

    call SetUnitAbilityLevel(hero, LoadInteger(table, selector, selectorBookHash), level)
    call SetUnitAbilityLevel(hero, selector, level)
    call SetUnitAbilityLevel(hero, LoadInteger(table, selector, addedHash), level)
    call SetUnitAbilityLevel(hero, LoadInteger(table, selector, effectHash), level)
endfunction

function SwapBookAddIfMissing takes unit hero, hashtable table, integer targetSelector returns nothing
    local integer counter = 0
    local integer numItems = LoadInteger(table, StringHash("NumItems"), 0)
    local integer selector 
    local integer parentHash = StringHash("Parent")
    local integer selectorBookHash = StringHash("SelectorBook")
    local integer addedHash = StringHash("AddedAbility")
    local boolean found = false

    loop
        exitwhen counter >= numItems or found == true
        set selector = LoadInteger(table, parentHash, counter)
        if (GetUnitAbilityLevel(hero, LoadInteger(table, selector, selectorBookHash)) >= 1) then
            set found = true
        endif
        set counter = counter + 1
    endloop

    if (found == false) then
        call UnitAddAbility(hero, LoadInteger(table, targetSelector, selectorBookHash))
        call UnitAddAbility(hero, LoadInteger(table, targetSelector, addedHash))
        call SwapBookApplyLevel(hero, table, targetSelector)
    endif
endfunction

function SwapBookActions takes hashtable table returns nothing
    local unit caster = GetSpellAbilityUnit()
    local integer abilityId = GetSpellAbilityId()
    local integer counter = 0
    local integer numItems = LoadInteger(table, StringHash("NumItems"), 0)
    local integer selector
    local integer parentHash = StringHash("Parent")
    local integer selectorBookHash = StringHash("SelectorBook")
    local integer addedHash = StringHash("AddedAbility")

    loop
        exitwhen counter >= numItems

        set selector = LoadInteger(table, parentHash, counter)
        if (selector == abilityId) then
            call UnitAddAbility(caster, LoadInteger(table, selector, selectorBookHash))
            call UnitAddAbility(caster, LoadInteger(table, selector, addedHash))
        else
            call UnitRemoveAbility(caster, LoadInteger(table, selector, selectorBookHash))
            call UnitRemoveAbility(caster, LoadInteger(table, selector, addedHash))
        endif

        set counter = counter + 1
    endloop

    set counter = 0

    loop
        exitwhen counter >= numItems

        set selector = LoadInteger(table, parentHash, counter)
        call SwapBookApplyLevel(caster, table, selector)

        set counter = counter + 1
    endloop

    set caster = null
endfunction

function SwapBookSetLevel takes hashtable table, unit hero, integer abilityCode, integer level returns nothing
    call SaveInteger(table, GetHandleId(hero), abilityCode, level)
    call SwapBookApplyLevel(hero, table, abilityCode)
endfunction